import{_ as s,c as a,o as e,a as n}from"./app.fa48b1f3.js";const D=JSON.parse('{"title":"Async","description":"","frontmatter":{},"headers":[{"level":2,"title":"runAfter()","slug":"runafter","link":"#runafter","children":[]}],"relativePath":"async.md"}'),o={name:"async.md"},l=n(`<h1 id="async" tabindex="-1">Async <a class="header-anchor" href="#async" aria-hidden="true">#</a></h1><h2 id="runafter" tabindex="-1">runAfter() <a class="header-anchor" href="#runafter" aria-hidden="true">#</a></h2><p>create a promise that will resolve after the given amount of time in milliseconds.</p><p>Uses <code>setTimeout</code>.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">runAfter</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">time</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">callback</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"></span></code></pre></div><ul><li><em><code>time</code></em> : delay in milliseconds.</li><li><em><code>callback</code></em> : callback to be executed.</li></ul><blockquote><p><em>throws when time is invalid.</em></p></blockquote><blockquote><p><em>throws when callback is not a function.</em></p></blockquote>`,8),t=[l];function c(p,r,i,d,y,A){return e(),a("div",null,t)}const F=s(o,[["render",c]]);export{D as __pageData,F as default};
